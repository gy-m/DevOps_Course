---
# - hosts: db
#   become: yes
#   vars_files:
#     - vars/staging_default.yml
#   tasks:

#   - name: Install aptitude using apt
#     apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

#   - name: Install required system packages
#     apt: name={{ item }} state=latest update_cache=yes
#     loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

#   - name: "Install required system packages - additional"
#     apt: name={{ item }} state=latest update_cache=yes
#     loop: [ 'gnupg', 'lsb-release']


#   - name: Add Docker GPG apt Key
#     apt_key:
#       url: https://download.docker.com/linux/ubuntu/gpg
#       state: present

#   - name: Add Docker Repository
#     apt_repository:
#       repo: deb https://download.docker.com/linux/ubuntu bionic stable
#       state: present

#   - name: Update apt and install docker-ce
#     apt: update_cache=yes name=docker-ce state=latest

#   - name: Install Docker Module for Python
#     pip:
#       name: docker

#   - name: Pull default Docker image
#     docker_image:
#       name: "{{ default_container_image }}"
#       source: pull

#   # Creates the number of containers defined by the variable create_containers, using values from vars file
#   - name: Create default containers
#     docker_container:
#       name: "{{ default_container_name }}{{ item }}"
#       image: "{{ default_container_image }}"
#       command: "{{ default_container_command }}"
#       state: present
#     with_sequence: count={{ create_containers }}


- hosts: app
  become: yes
  vars_files:
    - vars/staging_default.yml
  tasks:

  - name: "Update and upgrade apt package"
    apt:
      upgrade: yes
      update_cache: yes


  - name: "install zip"
    apt:
      name: zip
      state: latest


  - name: "install unzip"
    apt:
      name: unzip
      state: latest


  - name: "install nodejs"
    apt:
      name: nodejs
      state: latest


  - name: "update noodejs version"
    shell: curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -

  - name: "installing dependencies and running the app"
    shell: >
      sh 'sudo npm install'
      sh 'sudo npm run initdb'
      sh 'sudo npm install pm2 -g'                                 // install pm2
      sh 'pm2 start -f src/index.js'
      sh 'pm2 save'


  # TODO: update PGHOST and HOST_URL with variables, after ensuring hardcode works
  - name: "create .env file"
    copy:
      dest: ".env"    
      content: |
        # Host configuration
        PORT=8080
        HOST=0.0.0.0
        NODE_ENV=development
        HOST_URL=http://20.74.41.74:8080
        COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
        
        # Okta configuration
        OKTA_ORG_URL=https://dev-19252361.okta.com
        OKTA_CLIENT_ID="{{ clientid }}"
        OKTA_CLIENT_SECRET="{{ client_secret }}"

        # Postgres configuration
        PGHOST=10.0.0.21
        PGUSERNAME=postgres
        PGDATABASE=postgres
        PGPASSWORD=p@ssw0rd42
        PGPORT=5432
